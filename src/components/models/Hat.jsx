/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client";
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from "@react-three/fiber";

const Hat = React.memo(function Hat(props) {
    // Use React.memo for performance optimization
    const { nodes, materials } = useGLTF("/models/hat-transformed.glb");
  
    const modelRef = useRef();
  
    useFrame(() => {
      modelRef.current.rotation.y += 0.007;
    });

  return (
    <group {...props} 
    dispose={null}
    ref={modelRef}
    scale={[1, 1, 1]}
    rotation={[0.4, -1, 0]}
    position={[0, 1.5, 0]}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.polySurface1_aiStandardSurface1_0.geometry}
        material={materials.aiStandardSurface1}
        scale={2.464}
      />
    </group>
  )
})

export default Hat
useGLTF.preload('/models/hat-transformed.glb')